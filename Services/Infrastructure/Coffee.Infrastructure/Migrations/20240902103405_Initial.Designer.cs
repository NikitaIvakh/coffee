// <auto-generated />
using System;
using Coffee.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Coffee.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240902103405_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Coffee.Domain.Entities.CoffeeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CoffeeType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric(10, 2)");

                    b.HasKey("Id");

                    b.ToTable("Coffies");
                });

            modelBuilder.Entity("Coffee.Domain.Entities.CoffeeEntity", b =>
                {
                    b.OwnsOne("Coffee.Domain.ValueObject.CoffeeImage", "CoffeeImage", b1 =>
                        {
                            b1.Property<Guid>("CoffeeEntityId")
                                .HasColumnType("uuid");

                            b1.Property<string>("ImageLocalPath")
                                .HasColumnType("text")
                                .HasColumnName("ImageLocalPath");

                            b1.Property<string>("ImageUrl")
                                .HasColumnType("text")
                                .HasColumnName("ImageUrl");

                            b1.HasKey("CoffeeEntityId");

                            b1.ToTable("Coffies");

                            b1.WithOwner()
                                .HasForeignKey("CoffeeEntityId");
                        });

                    b.Navigation("CoffeeImage");
                });
#pragma warning restore 612, 618
        }
    }
}
